# Generated by Django 2.1.4 on 2019-01-08 06:48

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password_expired_at', models.DateTimeField(blank=True, null=True)),
                ('master_client_id', models.IntegerField(blank=True, default=0, null=True)),
                ('is_password_reset', models.BooleanField(blank=True, null=True)),
                ('closed', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_step', models.IntegerField(default=0)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('nick_name', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state_id', models.IntegerField(blank=True, default=0, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('is_different_address', models.BooleanField(null=True)),
                ('mailing_street', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_city', models.CharField(blank=True, max_length=255, null=True)),
                ('mailing_state_id', models.IntegerField(blank=True, default=0, null=True)),
                ('mailing_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Separated', 'Separated')], max_length=20, null=True)),
                ('annual_income', models.CharField(blank=True, choices=[('$0-$50,000', '$0-$50,000'), ('$50,001-$75,000', '$50,001-$75,000'), ('$75,001-$100,000', '$75,001-$100,000'), ('$100,001-$150,000', '$100,001-$150,000'), ('$150,001-$250,000', '$150,001-$250,000'), ('$250,001 +', '$250,001 +')], max_length=50, null=True)),
                ('estimated_income_tax', models.CharField(blank=True, max_length=50, null=True)),
                ('liquid_net_worth', models.CharField(blank=True, choices=[('$0-$25,000', '$0-$25,000'), ('$25,001-$50,000', '$25,001-$50,000'), ('$50,001-$100,000', '$50,001-$100,000'), ('$100,001-$200,000', '$100,001-$200,000'), ('$200,001-$350,000', '$200,001-$350,000'), ('$350,001-$700,000', '$350,001-$700,000'), ('$700,001-$1,000,000', '$700,001-$1,000,000'), ('$1,000,000 +', '$1,000,000 +')], max_length=50, null=True)),
                ('employment_type', models.CharField(choices=[('Employed', 'Employed'), ('Self-Employed', 'Self-Employed'), ('Retired', 'Retired'), ('Unemployed', 'Unemployed')], default='Employed', max_length=50, null=True)),
                ('suggested_portfolio_id', models.IntegerField(blank=True, default=0, null=True)),
                ('questionnaire_step', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('withdraw_age', models.IntegerField(blank=True, default=0, null=True)),
                ('client_source', models.CharField(blank=True, choices=[('web', 'web'), ('in-house', 'in-house')], max_length=10, null=True)),
                ('client_account_managed', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('client_status', models.SmallIntegerField(blank=True, choices=[(1, 'prospect'), (2, 'client')], null=True)),
                ('paymentMethod', models.IntegerField(blank=True, choices=[(1, 'Direct debit'), (2, 'Outside payment')], default=0, null=True)),
                ('ria_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ria', to='user.User')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('groups', models.ManyToManyField(to='auth.Group')),
                ('users', models.ManyToManyField(to='user.User')),
            ],
            options={
                'db_table': 'roles',
            },
        ),
    ]
